@startuml Database schema

' configuration for rendering
hide circle
skinparam linetype ortho

left to right direction

package "Incidents Config" {
    entity "incident_types" as incident_types {
        ' Descibe the type of incident (eg: threat, injury, death...)
        id: bigint PRIMARY KEY NOT NULL
        --
        label: varchar(255) UNIQUE NOT NULL
        description: text
        is_active: boolean NOT NULL DEFAULT true
    }

    entity "incident_targets" as incident_targets {
        ' Describe the target of the incident (eg: human, pet, livestock, vehicule, property...)
        id: bigint PRIMARY KEY NOT NULL
        --
        label: varchar(255) UNIQUE NOT NULL
        description: text
        is_active: boolean NOT NULL DEFAULT true
    }

    entity "incident_causes" as incident_causes {
        ' Describe the cause of the incident (eg: unknown, alcool, drug, age, safety measure non respect, accident, other...)
        id: bigint PRIMARY KEY NOT NULL
        --
        label: varchar(255) UNIQUE NOT NULL
        description: text
        is_active: boolean NOT NULL DEFAULT true
    }

    enum "incident_status" as incident_status {
        "Pending_verification"
        "Verified"
        "Unverifiable"
        "Rejected"
    }

}

package "Incidents" {

    entity "incidents" as incidents {
        id: bigint PRIMARY KEY NOT NULL
        --
        incident_type_id: bigint REFERENCES incident_types(id) ON DELETE RESTRICT NOT NULL
        incident_target_id: bigint REFERENCES incident_targets(id) ON DELETE RESTRICT NOT NULL
        incident_cause_id: bigint REFERENCES incident_causes(id) ON DELETE RESTRICT NOT NULL
        date: timestamp with time zone NOT NULL
        zip_code: varchar(5) NOT NULL
        title: text NOT NULL
        description: text NOT NULL
        created_at: timestamp with time zone
        updated_at: timestamp with time zone
        deleted_at: timestamp with time zone
        incident_status: incident_status NOT NULL DEFAULT 'Pending_verification'
    }

    incidents }|--|| incident_types
    incidents }|--|| incident_targets
    incidents }|--|| incident_causes
    incidents }|--|| incident_status

    entity "incident_sources" as incident_sources {
        id: bigint PRIMARY KEY NOT NULL
        --
        incident_id: bigint REFERENCES incidents(id) ON DELETE CASCADE NOT NULL
        description: text
        source: text
    }

    incidents ||--o{ incident_sources

    entity "incident_history" as incident_history {
        ' history of the incident report (changes, who created it, when, who validated it, when, who closed it, when, why, how...)
        id: bigint PRIMARY KEY NOT NULL
        --
        incident_id: bigint REFERENCES incidents(id) ON DELETE CASCADE NOT NULL
        description: text
        created_at: timestamp with time zone
    }
    
    incidents ||--o{ incident_history
}

package "Authentication" {

  entity "roles" as roles {
    id: bigint PRIMARY KEY NOT NULL
    --
    name: varchar(255) UNIQUE NOT NULL
  }


  entity "users" as users {
    id: bigint PRIMARY KEY NOT NULL
    --
    username: varchar(255) UNIQUE NOT NULL
    email: varchar(255) UNIQUE NOT NULL
    created_at: timestamp with time zone
    updated_at: timestamp with time zone
    deleted_at: timestamp with time zone
  }

  entity "user_history" as user_history {
    ' history of the user. Mainly used for audit purpose
    id: bigint PRIMARY KEY NOT NULL
    --
    user_id: bigint REFERENCES users(id) ON DELETE CASCADE NOT NULL
    description: text
    created_at: timestamp with time zone
  }

  entity "users_roles" as users_roles {
    user_id: bigint NOT NULL REFERENCES users(id) ON DELETE CASCADE
    role_id: bigint NOT NULL REFERENCES roles(id) ON DELETE CASCADE
  }

  users ||--|{ users_roles
  users_roles }|--|| roles

  users ||--o{ user_history
}

package "Migration" {

    entity "schema_migrations" as schema_migrations {
    version: bigint NOT NULL
    dirty: boolean NOT NULL
    }
    note bottom
    Used by golang-migrate/migrate
    endnote
}




@enduml

